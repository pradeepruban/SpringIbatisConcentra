<%/***********************************************************
  *Copyright (C) 2015 Syntel and/or its affiliates
  *All rights reserved.
************************************************************/%>
<%
/********************************************************************
 Author 				: Syntel
 Version 				: 1.0
 Purpose				: This is for Incident execution details List of SyntBotsITOps Application
 ********************************************************************/
%>
<%@ page language="java" contentType="text/html; charset=UTF-8"
	pageEncoding="UTF-8"%>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
<title>SOP Execution List</title>
<% 
String strFetchSopDtlsForIncidentId= "";
String strIncidentIdFromSopDtls = "";

if( request.getParameter("fetchSopDtlsForIncidentId") != null){
	
	strFetchSopDtlsForIncidentId = request.getParameter("fetchSopDtlsForIncidentId");
	//System.out.println("strFetchSopDtlsForIncidentId is not null");
}
if( strFetchSopDtlsForIncidentId.equalsIgnoreCase("true")){
	
	if( request.getParameter("incidentId") != null){	
		strIncidentIdFromSopDtls = request.getParameter("incidentId");
		//System.out.println("strIncidentIdFromSopDtls is not null, and the same is:"+strIncidentIdFromSopDtls+":");
	}	
	
}
//System.out.println("strFetchSopDtlsForIncidentId:"+strFetchSopDtlsForIncidentId);
%>
<script type="text/javascript">
var itopsIncidentExecListDataTable;
var varIncidentIdFromSopDtls='<%=strIncidentIdFromSopDtls%>';
/**
 *This is method is called during jsp is loaded
 */
jQuery(document).ready(function() {
	fnItopsIncidentExecListDataTable();
	if(varIncidentIdFromSopDtls.length > 0){
		document.getElementById('incidentIdInput').value =varIncidentIdFromSopDtls;
		fnItOpsGetIncidentExecDtlsByIncidentId();
	}
	else{
		fnItopsGetIncidentExecList(); 
		
	}	
});

<%-- var incId = ; --%>
/**
 *This function is used to get data table properties of Incident execution list data table
 */
function fnItopsIncidentExecListDataTable(){
	
	itopsIncidentExecListDataTable = $('#itopsIncidentExecList').dataTable({
					"destroy" : true,
					"processing" : true,
					"scrollY" : "300px",
					"autoWidth" : true,
					"iDisplayLength" : 50,
					"sDom" : "<'dt-toolbar'<'col-xs-6 col-sm-6'f>r>"
							+ "t"
							+ "<'dt-toolbar-footer'<'col-sm-6 col-xs-6 hidden-xs'i><'col-sm-6 col-xs-12'p>>",

					"oTableTools" : {
						"aButtons" : [
								"copy",
								"csv",
								"xls",
								{
									"sExtends" : "pdf",
									"sTitle" : "SyntBots_PDF",
									"sPdfMessage" : "SyntBots PDF Export",
									"sPdfSize" : "letter"
								},
								{
									"sExtends" : "print",
									"sMessage" : "Generated by SyntBots <i>(press Esc to close)</i>"
								} ],
						"sSwfPath" : "<%=request.getContextPath()%>/smartadmin/js/plugin/datatables/swf/copy_csv_xls_pdf.swf"
					},

					//"sAjaxSource": 'getIncidentExecutionList',
					"aoColumns" : [ {
						"data" : "incidentExecId"
					},{
						"data" : "incidentId"
					},{
						"data" : "usrName"
					},{
						"data" : "incidentExecStatus"
					},{
						"data" : "applnName"
					},{
						"data" : "queName"
					},{
						"data" : "sopName"
					},{
						"data" : "wrkflwName"
					},{
						"data" : "strIncidentExecStartDate"
					},{
						"data" : "strIncidentExecEndDate"
					},{
						"data" : "incidentExecRemarks"
					},
					 {
						"data" : "incidentExecExcpMsg"
					},{
						"data" : "incidentExecExcpDtls"
					},{
						"data" : "incidentExecExcpStcktrce"
					}, 
					{
						"data" : "incidentExecParamDtlsList"
					}
				],
				"columnDefs": [
						            {
						                "targets": [ 4,5,6,7,8,9,10,11,12,13,14],
						                "visible": false,
						                "searchable": false
						            }
						       ]
					
				});
	
	

	
}
/**
 *This method is used to intiate an ajax call to get incident execution list
 * @return success function/ error function
*/
function fnItopsGetIncidentExecList()
{
	var getIncidentExecListJsonObj = {};	
	var strJSON = JSON.stringify(getIncidentExecListJsonObj);
	fnCommonDoAjaxForGet("<%=request.getContextPath()%>/pages/getIncidentExecutionList", strJSON,  "fnItopsLoadIncidentExecListDataTable", "fnItopsErrOnLoadIncidentExecListDataTable");
	
}
/**This method is called on success of fnCommonDoAjaxForGet util method with incident execution list to display in incident execution data table
* @param incident execution list
*/
function fnItopsLoadIncidentExecListDataTable(varIncidentExecListTableData){
	
	 fnLoadDataTable(itopsIncidentExecListDataTable, varIncidentExecListTableData);
	 if( (typeof(varIncidentExecListTableData) !="undefined")  && (varIncidentExecListTableData != 'undefined') && (varIncidentExecListTableData != null)   
			 && (typeof(varIncidentExecListTableData.aaData) !="undefined")  && (varIncidentExecListTableData.aaData != 'undefined') && (varIncidentExecListTableData.aaData != null) && (varIncidentExecListTableData.aaData.length > 0)
			 && (typeof(varIncidentExecListTableData.aaData[0]) !="undefined")  && (varIncidentExecListTableData.aaData[0] != 'undefined') && (varIncidentExecListTableData.aaData[0] != null) 
		){
		fnSetSopExecutionRightPortion(varIncidentExecListTableData.aaData[0]);
	}
	// alert("End  of the fnItopsLoadIncidentExecListDataTable fn::");
	 itopsIncidentExecListDataTable.find('tbody tr:first').addClass('row_selected');
}
/**This method is called on failure of fnCommonDoAjaxForGet util method with action get incident execution list
*/
function fnItopsErrOnLoadIncidentExecListDataTable(){
	alert("End  of the fnItopsErrOnLoadIncidentExecListDataTable fn::");
}

/**This method is called on clicking of row in incident execution data table
*/
$("#itopsIncidentExecList tbody").delegate("tr", "click", function() {
 		var position = itopsIncidentExecListDataTable.fnGetPosition(this);
	  	var aData = itopsIncidentExecListDataTable.fnGetData(position[0]);
	  	fnSetSopExecutionRightPortion(aData[position]);
				
		/* var html='';
		for (var i = 0, len = data.length; i < len; ++i) {
			html +=data[i].paramName.toUpperCase()+"\t:\t";
			html +=data[i].paramValue+"\n";
		}
		document.getElementById('incidentExecParamDtlsList').innerHTML =html;  */
	  	$("#itopsIncidentExecList tbody tr").removeClass('row_selected');	
	    $(this).addClass('row_selected');
}); 

/**This method is called to load values in SOP execution details
 *param SOP details
 */
function fnSetSopExecutionRightPortion(varSopData){
	document.getElementById('applnName').innerHTML = varSopData.applnName;
  	document.getElementById('queName').innerHTML = varSopData.queName;
  	document.getElementById('sopName').innerHTML = varSopData.sopName;
  	document.getElementById('wrkflwName').innerHTML = varSopData.wrkflwName;
    document.getElementById('incidentExecStartDate').innerHTML = varSopData.strIncidentExecStartDate;
	document.getElementById('incidentExecEndDate').innerHTML = varSopData.strIncidentExecEndDate;
	document.getElementById('incidentExecRemarks').innerHTML = varSopData.incidentExecRemarks;
	document.getElementById('incidentExecExcpMsg').innerHTML = varSopData.incidentExecExcpMsg;
	document.getElementById('incidentExecExcpDtls').innerHTML = varSopData.incidentExecExcpDtls;
	document.getElementById('incidentExecExcpStcktrce').innerHTML = varSopData.incidentExecExcpStcktrce; 
	$('#div1').html('');
	var data = varSopData.incidentExecParamDtlsList;
	 var html = '<table class="table table-hover"><thead><tr></tr></thead><tbody>';
	for (var i = 0, len = data.length; i < len;++i) {
	    html += '<tr>';	
	        html += '<th>' + data[i].paramName + '</th>';
	        html += '<td>' + data[i].paramValue + '</td>';
	    html += '</tr>';
	}
	html += '</tbody><tfoot><tr></tr></tfoot></table>';

	$(html).appendTo('#div1'); 
}
/**
 *This method is used to intiate an ajax call to get incident execution details based on incident execution Id
 * @param inicident execution Id
 * @return success function/ error function
*/	
function fnItOpsGetIncidentExecDtlsByIncidentExecId(){
	//	alert(document.getElementById('incidentExecutionIdInput').value);
		var incidentExecId=document.getElementById('incidentExecutionIdInput').value;
	    var getIncidentExecDtlsByIncidentExecIdJsonObj = {};
		getIncidentExecDtlsByIncidentExecIdJsonObj['incidentExecId'] =incidentExecId;
		var strJSON = JSON.stringify(getIncidentExecDtlsByIncidentExecIdJsonObj);
		fnCommonDoAjaxForGet("<%=request.getContextPath()%>/pages/getIncidentExecDtlsByIncidentExecId", strJSON,  "fnItopsLoadIncidentExecByIncidentExecIdDataTable", "fnErrAfterfnGetIncidentExecDtlsByIncidentExecId"); 
}
/**This method is called on success of fnCommonDoAjaxForGet util method with action get incident execution details based on incident execution Id 
* @param incident execution details
*/
function fnItopsLoadIncidentExecByIncidentExecIdDataTable(varIncidentExecByIncidentExecIdTableData)
{
	
//	alert("inside  of the fnItopsLoadIncidentExecByIncidentExecIdDataTable fn::##########"+varIncidentExecByIncidentExecIdTableData+"######");
	document.getElementById('applnName').innerHTML =  '';
  	document.getElementById('queName').innerHTML = '';
  	document.getElementById('sopName').innerHTML = '';
  	document.getElementById('wrkflwName').innerHTML =  '';
	document.getElementById('incidentExecStartDate').innerHTML = '';
	document.getElementById('incidentExecEndDate').innerHTML = '';
	document.getElementById('incidentExecRemarks').innerHTML = '';
	 document.getElementById('incidentExecExcpMsg').innerHTML ='';
	document.getElementById('incidentExecExcpDtls').innerHTML = '';
	document.getElementById('incidentExecExcpStcktrce').innerHTML = ''; 
	
	fnLoadDataTable(itopsIncidentExecListDataTable, varIncidentExecByIncidentExecIdTableData);
	
	if( (typeof(varIncidentExecByIncidentExecIdTableData) !="undefined")  && (varIncidentExecByIncidentExecIdTableData != 'undefined') && (varIncidentExecByIncidentExecIdTableData != null)   
			 && (typeof(varIncidentExecByIncidentExecIdTableData.aaData) !="undefined")  && (varIncidentExecByIncidentExecIdTableData.aaData != 'undefined') && (varIncidentExecByIncidentExecIdTableData.aaData != null) && (varIncidentExecByIncidentExecIdTableData.aaData.length > 0)
			 && (typeof(varIncidentExecByIncidentExecIdTableData.aaData[0]) !="undefined")  && (varIncidentExecByIncidentExecIdTableData.aaData[0] != 'undefined') && (varIncidentExecByIncidentExecIdTableData.aaData[0] != null) 
		){
		fnSetSopExecutionRightPortion(varIncidentExecByIncidentExecIdTableData.aaData[0]);
	}
	
	//alert("End  of the fnItopsLoadIncidentExecByIncidentExecIdDataTable fn::");
}
/**This method is called on failure of fnCommonDoAjaxForGet util method with action get incident execution details based on Id 
*/
function fnErrAfterfnGetIncidentExecDtlsByIncidentExecId(){
	alert("Failure");
}
/**
 *This method is used to intiate an ajax call to get incident execution details based on incident Id
 * @param inicident Id
 * @return success function/ error function
*/
function fnItOpsGetIncidentExecDtlsByIncidentId(){
	
	var incidentId=document.getElementById('incidentIdInput').value;
    var getIncidentExecDtlsByIncidentIdJsonObj = {};
	getIncidentExecDtlsByIncidentIdJsonObj['incidentId'] =incidentId;
	var strJSON = JSON.stringify(getIncidentExecDtlsByIncidentIdJsonObj);
	fnCommonDoAjaxForGet("<%=request.getContextPath()%>/pages/getIncidentExecDtlsByIncidentId", strJSON,  "fnItopsLoadIncidentByIncidentExecIdDataTable", "fnErrAfterfnGetIncidentDtlsByIncidentExecId"); 
}
/**This method is called on success of fnCommonDoAjaxForGet util method with action get incident execution details based on incident Id 
* @param incident execution details
*/
function fnItopsLoadIncidentByIncidentExecIdDataTable(varIncidentExecByIncidentIdTableData)
{
	//alert("inside  of the fnItopsLoadIncidentByIncidentExecIdDataTable fn::##########"+varIncidentExecByIncidentIdTableData+"######");
	document.getElementById('applnName').innerHTML =  '';
  	document.getElementById('queName').innerHTML = '';
  	document.getElementById('sopName').innerHTML = '';
  	document.getElementById('wrkflwName').innerHTML =  '';
	document.getElementById('incidentExecStartDate').innerHTML = '';
	document.getElementById('incidentExecEndDate').innerHTML = '';
	document.getElementById('incidentExecRemarks').innerHTML = '';
	document.getElementById('incidentExecExcpMsg').innerHTML ='';
	document.getElementById('incidentExecExcpDtls').innerHTML = '';
	document.getElementById('incidentExecExcpStcktrce').innerHTML = '';  
	fnLoadDataTable(itopsIncidentExecListDataTable, varIncidentExecByIncidentIdTableData);
	
 if( (typeof(varIncidentExecByIncidentIdTableData) !="undefined")  && (varIncidentExecByIncidentIdTableData != 'undefined') && (varIncidentExecByIncidentIdTableData != null)   
			 && (typeof(varIncidentExecByIncidentIdTableData.aaData) !="undefined")  && (varIncidentExecByIncidentIdTableData.aaData != 'undefined') && (varIncidentExecByIncidentIdTableData.aaData != null) && (varIncidentExecByIncidentIdTableData.aaData.length > 0)
			 && (typeof(varIncidentExecByIncidentIdTableData.aaData[0]) !="undefined")  && (varIncidentExecByIncidentIdTableData.aaData[0] != 'undefined') && (varIncidentExecByIncidentIdTableData.aaData[0] != null) 
		){
		fnSetSopExecutionRightPortion(varIncidentExecByIncidentIdTableData.aaData[0]);
	} 
	//alert("End  of the fnItopsLoadIncidentByIncidentExecIdDataTable fn::");
}
/**This method is called on failure of fnCommonDoAjaxForGet util method with action get incident execution details based on Id 
*/
function fnErrAfterfnGetIncidentDtlsByIncidentExecId(){
	alert("Failure");
}




</script>

</head>
<body>
	<section id="widget-grid" class="">
	<div class="row">
		<div class="pull-right"></div>
	</div>
	<!-- row -->
	<div class="row">
		<!-- NEW WIDGET START -->
		<article class="col-xs-12 col-sm-12 col-md-12 col-lg-12"> <!-- Widget ID (each widget will need unique ID)-->
		<div class="jarviswidget" id="wid-id-11"
			data-widget-colorbutton="false" data-widget-colorbutton="false"
			data-widget-editbutton="false" data-widget-togglebutton="false"
			data-widget-deletebutton="false" data-widget-fullscreenbutton="false"
			data-widget-custombutton="false">

		
		
			<div class="row">
					<div class="col-md-8">
						<div class="form-group">
							<label for="category">Incident Execution Id</label>
							<input type="text" name=incidentExecutionIdInput id="incidentExecutionIdInput"/> 
						
						<button type="button" class="btn btn-primary" onclick="javascript:fnItOpsGetIncidentExecDtlsByIncidentExecId();">
						Get Details
						</button>
						</div>
					</div>
					<div class="col-md-4">
						<div class="form-group">
							<label for="category">Incident Id</label>
							<input type="text" name=incidentIdInput id="incidentIdInput" value=""/> 
						
						<button type="button" class="btn btn-primary" onclick="javascript:fnItOpsGetIncidentExecDtlsByIncidentId();">
						Get Details
						</button>
						</div>
					</div>
					
			</div>
			
			
			</div>
			</article>
			</div>
			</section>						
			
			

			<div class="row">
			<!-- NEW WIDGET START -->
			<article class="col-xs-12 col-sm-12 col-md-12 col-lg-6">
					<!-- Widget ID (each widget will need unique ID)-->
					<div class="jarviswidget jarviswidget-color-blueDark" id="wid-id-0" data-widget-editbutton="false" data-widget-colorbutton="false">
				
						<header>
						<!-- 	<span class="widget-icon"> <i class="fa fa-table"></i> </span> -->
							<h2>Incident Execution List<h2>
						</header>
						<!-- widget div-->
						<div>		
							<!-- widget edit box -->
							<div class="jarviswidget-editbox">
								<!-- This area used as dropdown edit box -->
							</div>
							<!-- end widget edit box -->
							<!-- widget content -->
							<div class="widget-body no-padding">
								<table id="itopsIncidentExecList"
										class="table table-striped table-bordered table-hover"
										width="100%">
										<thead>
											<tr>
												<th>Incident Execution Id</th>
												<th>Incident Id</th>
												<th>User Name</th>
												<th>Execution Status</th>
										   </tr>
										</thead>
										<tbody>
		
										</tbody>
								</table>
							</div>
							<!-- end widget content -->
						</div>
						<!-- end widget div -->
					</div>
					<!--END WIDGET ID -->
			
			</article>
			<!-- END ARTICLE-->	
			
			<!-- NEW WIDGET START -->
			<article class="col-sm-12 col-md-12 col-lg-6">
				<!-- Widget ID (each widget will need unique ID)-->
							
							<div class="jarviswidget jarviswidget-color-blueDark" id="wid-id-2" data-widget-editbutton="false">
								
								<header>
								<!-- 	<span class="widget-icon"> <i class="fa fa-table"></i> </span> -->
									<h2>Incident Execution Details </h2>
								</header>
								<!-- widget div-->
								<div>
									<!-- widget edit box -->
									<div class="jarviswidget-editbox">
										<!-- This area used as dropdown edit box -->
									</div>
									<!-- end widget edit box -->
									<!-- widget content -->
									<div class="widget-body no-padding">
										<div class="table-responsive">
											<table class="table table-hover">
												<tbody>
													<tr>
														<th>Application Name</th>
														<td id='applnName'></td>
													</tr>
													<tr>
														<th>Queue Name</th>
														<td id='queName'></td>
													</tr>
													<tr>
														<th>SOP Name</th>
														<td id='sopName'></td>
													</tr>
													<tr>
														<th>Work Flow Name</th>
														<td id='wrkflwName'></td>
													</tr>
												    <tr>
														<th>Incident Execution Start Date</th>
														<td id='incidentExecStartDate'></td>
													</tr>
													<tr>
														<th>Incident Execution End Date</th>
														<td id='incidentExecEndDate'></td>
													</tr>
													<tr>
														<th>Remarks</th>
														<td><textarea id='incidentExecRemarks' rows="2" cols="50" disabled="disabled"></textarea></td>
													</tr>
													<tr>
														<th>Exception Message</th>
														<td><textarea id='incidentExecExcpMsg' rows="1" cols="50" disabled="disabled"></textarea></td>
													</tr>
													<tr>
														<th>Exception Details</th>
														<td><textarea  id='incidentExecExcpDtls' rows="1" cols="50" disabled="disabled"></textarea></td>
													</tr>
													<tr>
														<th>Exception StackTrace</th>
														<td><textarea  id='incidentExecExcpStcktrce' rows="4" cols="50" disabled="disabled"></textarea></td>
													</tr> 
													<!-- <tr>
														<th>Param Details</th>
														<td><textarea  id='incidentExecParamDtlsList' rows="4" cols="50"></textarea></td>
													</tr>-->
												</tbody> 
											</table>
										</div>
										<!--  <div id='div1'> </div>  -->
									</div>
									<!-- end widget content -->

								</div>
								<!-- end widget div -->

							</div>
							<!-- end widget -->

				</article>
						<!-- WIDGET END -->
						
						
				<article class="col-xs-12 col-sm-12 col-md-12 col-lg-6 pull-right">
					<!-- Widget ID (each widget will need unique ID)-->
					<div class="jarviswidget jarviswidget-color-blueDark" id="wid-id-0" data-widget-editbutton="false" data-widget-colorbutton="false">
				
						<header>
						<!-- 	<span class="widget-icon"> <i class="fa fa-table"></i> </span> -->
							<h2>Execution Param List<h2>
						</header>
						<!-- widget div-->
						<div>		
							<!-- widget edit box -->
							<div class="jarviswidget-editbox">
								<!-- This area used as dropdown edit box -->
							</div>
							<!-- end widget edit box -->
							<!-- widget content -->
							<div class="widget-body no-padding">
									<div class="table-responsive">
										 <div id='div1'> 
										 </div> 
									</div>
							</div>
							<!-- end widget content -->
						</div>
						<!-- end widget div -->
					</div>
					<!--END WIDGET ID -->
			
			</article>
			
			</div>
		
		
		
	

</body>

</html>