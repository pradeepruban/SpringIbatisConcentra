<%/***********************************************************
  *Copyright (C) 2015 Syntel and/or its affiliates
  *All rights reserved.
************************************************************/%>
<%
/********************************************************************
 Author 				: Syntel
 Version 				: 1.0
 Purpose				: This is for SOP deatils List and SOP param details list of SyntBotsITOps Application
 ********************************************************************/
%>
<%@ page language="java" contentType="text/html; charset=ISO-8859-1"
    pageEncoding="ISO-8859-1"%>
<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1">
<title>SOP Details List</title>
<script>
/**
 *This is method is called during jsp is loaded
 */
$(document).ready(function() {
	fnIntlizSopDtlsDataTable();
	fnGetSopDtls();
	fnSopParamDtlsDataTable();
	//fnSetSopParamDetailsFirstTime(varTempSopParamdtls);
});
/**
 *This function is used to get data table properties of SOP details data table
 */
var varSopDtlsDataTable;
function fnIntlizSopDtlsDataTable(){
	
	varSopDtlsDataTable = $('#sopDtlsDataTable').dataTable({
		                                                    "destroy" : true,
		                                                    "processing" : true,
															"autoWidth" : true,
															"iDisplayLength" : 5,
															"sDom" : "<'dt-toolbar'<'col-xs-6 col-sm-6'f>r>"
																+ "t"
																+ "<'dt-toolbar-footer'<'col-sm-6 col-xs-6 hidden-xs'i><'col-sm-6 col-xs-12'p>>",
											"oTableTools" : {
															"aButtons" : [
																	"copy",
																	"csv",
																	"xls",
																	{
																		"sExtends" : "pdf",
																		"sTitle" : "SyntBots_PDF",
																		"sPdfMessage" : "SyntBots PDF Export",
																		"sPdfSize" : "letter"
																	},
																	{
																		"sExtends" : "print",
																		"sMessage" : "Generated by SyntBots <i>(press Esc to close)</i>"
																	} ],
															"sSwfPath" : "<%=request.getContextPath()%>/smartadmin/js/plugin/datatables/swf/copy_csv_xls_pdf.swf"
														}, 
														
														   "aoColumns" : [
														                  {
																"data" : "sopId"
															}, {
																"data" : "sopName"
															},
															{
																"data" : "sopDesc"
															}, 
															{
																"data" : "createdUser"
															},
															{
																"data" : "strCreatedDate"
															},
															{
																"data" : "modifiedUser"
															},
															{
																"data" : "strModifiedDate"
															},
															{
																"data" : "deleteFlag",
																"mRender": function (data, type, row) {
																	if( (typeof(data) !="undefined")  && (data != 'undefined') && (data != null) ){
																	 if (data == '0') {
																		 return ' <span class="badge bg-color-green">No</span>';
															          } else if(data == '1') {
															        	   return ' <span class="badge bg-color-orange">Yes</span>';
															          }
															          else{
																	   return data;
																	  }
																	 }else{
																			data = '';
																			return data;
																		}
																	  
														      }	
															},
															{
																"data" : "sopAction"
															}],
															
	});
	
	}
//from here datatable for sopparam details
/**
 *This function is used to get data table properties of SOP param details data table
 */
var varSopParamDtlsDataTable;
function fnSopParamDtlsDataTable(){
	
	varSopParamDtlsDataTable = $('#sopParamDtlsDataTable').dataTable({
															"processing" : true,
															 "destroy" : true,
															"autoWidth" : true,
															"iDisplayLength" : 3,
															"sDom" : "<'dt-toolbar'<'col-xs-6 col-sm-6'f>r>"
																+ "t"
																+ "<'dt-toolbar-footer'<'col-sm-6 col-xs-6 hidden-xs'i><'col-sm-6 col-xs-12'p>>",
											"oTableTools" : {
															"aButtons" : [
																	"copy",
																	"csv",
																	"xls",
																	{
																		"sExtends" : "pdf",
																		"sTitle" : "SyntBots_PDF",
																		"sPdfMessage" : "SyntBots PDF Export",
																		"sPdfSize" : "letter"
																	},
																	{
																		"sExtends" : "print",
																		"sMessage" : "Generated by SyntBots <i>(press Esc to close)</i>"
																	} ],
															"sSwfPath" : "<%=request.getContextPath()%>/smartadmin/js/plugin/datatables/swf/copy_csv_xls_pdf.swf"
														}, 
														
														   "aoColumns" : [{
																"data" : "sopParamId"
															},
														    {
																"data" : "paramCode"
															},
															{
																"data" : "paramValue"
															},
															{
																"data" : "createdUser"
															}, 
															{
																"data" : "strCreatedDate"
															},
															 
															{
																"data" : "modifiedUser"
															},
															{
																"data" : "strModifiedDate"
															},
															{
																"data" : "deleteFlag",
																"mRender": function (data, type, row) {
																	if( (typeof(data) !="undefined")  && (data != 'undefined') && (data != null) ){
																	 if (data == '0') {
																		 return ' <span class="badge bg-color-green">No</span>';
															          } else if(data == '1') {
															        	   return ' <span class="badge bg-color-orange">Yes</span>';
															          }
															          else{
																	   return data;
																	  } 
																	 }else{
																			data = '';
																			return data;
																		}
																 }	
															},{
																"data" : "sopParamAction"
															}]
															
	});
}
/**
 *This method is used to intiate an ajax call to get SOP details list
 * @return success function/ error function
*/
function fnGetSopDtls()
{
	var sopdtlsJsonObj = {};	
	var strJSON = JSON.stringify(sopdtlsJsonObj);
	 //alert("strJSON is"+strJSON+':');
	 fnCommonDoAjaxForGet("<%=request.getContextPath()%>/pages/getSopDetailsToView", strJSON,  "fnSucAfterGetSopDetails", "fnErrAfterGetSopDetails");	
}
/**This method is called on success of fnCommonDoAjaxForGet util method with action get SOP details
* @param application details
*/
function fnSucAfterGetSopDetails(varSopDetails)
{
	//alert("inside  of the fnSucAfterGetSopDetails fn::##########"+varSopDetails+"######");
	fnLoadDataTable(varSopDtlsDataTable, varSopDetails);
	varSopDtlsDataTable.find('tbody tr:first').addClass('row_selected');
	//alert("after loading table");
	//alert("after loading table"+varSopDetails.aaData[0]);
  	fnSetSopDetailsRightPortion(varSopDetails.aaData[0]);
  	//fnSetSopDetailsRightPortion();
  	//fnSetSopParamDetailsFirstTime(aData[position[0]]);
    //alert("End  of the fnSucAfterGetSopDetails fn::");
	
}
/**This method is called on failure of fnCommonDoAjaxForGet util method with action get SOP details
*/
function fnErrAfterGetSopDetails()
{
	alert("Sop Details error");
} 
/**This method is called on clicking of row in SOP details data table
*/
$("#sopDtlsDataTable tbody").delegate("tr", "click", function() {
	//alert("row click");
	var position = varSopDtlsDataTable.fnGetPosition(this);
  	var aData = varSopDtlsDataTable.fnGetData(position[0]);
  	//alert("************"+aData[position]);
  	fnSetSopDetailsRightPortion(aData[position]);
  	$("#sopDtlsDataTable tbody tr").removeClass('row_selected');	
    $(this).addClass('row_selected');
});
/**This method is called to load SOP details data table for corresponding row click
 * @param SOP data of corresponding row
 */
function fnSetSopDetailsRightPortion(varSopData){
	    //alert("inside fnSetSopDetailsRightPortion():"+varSopData['sopId']);
		var sopParamList = varSopData['sopParamDetails'];
		fnLoadDataTableFromList(varSopParamDtlsDataTable, sopParamList);
		$("#sopIdParam").val(varSopData['sopId']);
		
}
/**This method is called to load add SOP popup
 */
function fnItOpsSOPDtlsAddSOP() {
	
	$('#sopName').removeAttr('disabled');
	document.getElementById("sopId").value = "";
	document.getElementById("sopName").value = "";
	document.getElementById('sopName').style.border = '';
	document.getElementById("sopDesc").value = "";
	document.getElementById('sopDesc').style.border = '';
	document.getElementById("checkbox").checked = false;
	document.getElementById("deletecheckbox").style.display = 'none';
	$('#itOpsSOPDtlsAddEditPopUp').modal('show');
}
/**This method is called from controller  to load sop details in edit SOP popup
 * @param sopId
 */
function fnPopulateSOPDtlsInPopup(varSOPId){
	//alert("varSOPId:  " +varSOPId);
	var allSOPData = $('#sopDtlsDataTable').DataTable().rows().data();
	for(var i=0;i<allSOPData.length;i++)
	{
	var tempSOPData = allSOPData [i];
	//alert("inside fnPopulateSOPDtlsInPopup fn., tempSOPData is:"+tempSOPData +':tempSOPData [sopId]:'+tempSOPData ['sopId']+':');
	var tempSOPId = tempSOPData ['sopId'];
	if(tempSOPId == varSOPId)
		{
			$("#sopId").val(tempSOPId);
			$("#sopName").val(tempSOPData ['sopName']);
			$("#sopDesc").val(tempSOPData ['sopDesc']);
			document.getElementById('sopDesc').style.border = '';
			if(tempSOPData ['deleteFlag']==1){
				document.getElementById("checkbox").checked = true;
			}
			else{
			document.getElementById("checkbox").checked = false;
			}
			document.getElementById("deletecheckbox").style.display = 'block';
			$('#itOpsSOPDtlsAddEditPopUp').modal('show');
			document.getElementById("sopName").disabled = true;
			
			break;
		}
	
	} 
}
/**This method is called to intiate validation of SOP details entered by user in popup
 * @param sopId
 */
function fnItOpsValSOPDtls(){
	//alert("validate method");
	 var varItOpsSOPDtlsValidationErrMsg = '';
	 var varSOPName = document.getElementById('sopName').value;
	 var varSOPDesc = document.getElementById('sopDesc').value;
	 
   if(varSOPName == null || varSOPName == "") {
	   varItOpsSOPDtlsValidationErrMsg = "SOP Name";
   	setInvalidInputFieldBorderRed('sopName');
   }
	if(varSOPDesc == null || varSOPDesc == ""){
			if(varItOpsSOPDtlsValidationErrMsg.length > 0)
			{
				varItOpsSOPDtlsValidationErrMsg += ", ";
			}
			varItOpsSOPDtlsValidationErrMsg += "SOP Description";
			setInvalidInputFieldBorderRed('sopDesc');
	}
	if(varItOpsSOPDtlsValidationErrMsg.length > 0)
	{
		varItOpsSOPDtlsValidationErrMsg += " are mandatory fields. ";
	}
	if(varItOpsSOPDtlsValidationErrMsg == null || varItOpsSOPDtlsValidationErrMsg == ''){
		var varSOPID=getValuesFromInputField("sopId");
		if(varSOPID==0)
		{
			//alert("inside if sopId"+varSOPID);
			fnItOpsGetSOPNameCount();
		}
		else{
			fnItOpsSaveSOPDTls();
		}
	}else{
		//alert(varItOpsSOPDtlsValidationErrMsg+" Fields are Required:");
		fnShowItOpsValidationDialog(varItOpsSOPDtlsValidationErrMsg);
	}	
	
	
	
}
/**This method is called to intiate an ajax call to get count of SOP name in database 
 * @param sopName
 */
function fnItOpsGetSOPNameCount()
{
	 //alert("inside fnItOpsGetSOPNameCount ");
	 var varGetSOPCountJsonObj = {};
	 varGetSOPCountJsonObj['sopName'] = getValuesFromInputField("sopName");
	 //alert("name to controller"+varGetSOPCountJsonObj['sopName']);
	 var strJSON = JSON.stringify(varGetSOPCountJsonObj);
	 fnCommonDoAjaxForGet("<%=request.getContextPath()%>/pages/itOpsValSOPDtls", strJSON,  "fnSucAfterGetSOPNameCount", "fnErrAfterGetSOPNameCount");
}
/**This method is called on success of fnCommonDoAjaxForGet util method with action get SOP details based on SOP name
 * This method checks and display whether SOP name already existst or not
 * @param application details
*/
function fnSucAfterGetSOPNameCount(data)
{
	
	
	//alert("inside fnSucAfterGetSOPNameCount"+data);
	if(data==0){
		//alert("data is 0");
		fnItOpsSaveSOPDTls();
	}
	else{
		alert("Already name exists");
	}
}
/**This method is called on failure of fnCommonDoAjaxForGet util method with action get SOP details based on SOP name
*/
function fnErrAfterGetSOPNameCount(){
	alert("Failure");
}
/**This method is called to intiate an ajax call to save SOP details
 * @param SOP details user enters in popup
 */
function fnItOpsSaveSOPDTls(){
	//alert("inside fnItOpsSaveSOPDTls");
	//validate();
	var varItOpsSaveSOPDTlsJsonObj = {};
	
	varItOpsSaveSOPDTlsJsonObj['sopId'] = getValuesFromInputField("sopId");
	//alert("sopId"+	varItOpsSaveSOPDTlsJsonObj['sopId'] );
	
    var checkboxvalue=document.getElementById("checkbox").checked;
    //alert("checkboxvalue"+checkboxvalue);
	if(checkboxvalue==true){
		varItOpsSaveSOPDTlsJsonObj['deleteFlag'] = 1;
	}
	else{
		varItOpsSaveSOPDTlsJsonObj['deleteFlag'] = 0;
	}
	//alert("deleteFlag"+	varItOpsSaveSOPDTlsJsonObj['deleteFlag'] );
	
	varItOpsSaveSOPDTlsJsonObj['sopName'] = getValuesFromInputField("sopName");
	//alert("sopName"+	varItOpsSaveSOPDTlsJsonObj['sopName'] );
	varItOpsSaveSOPDTlsJsonObj['sopDesc'] = getValuesFromInputField("sopDesc");
	//alert("sopDesc"+	varItOpsSaveSOPDTlsJsonObj['sopDesc'] );
	var strJSON = JSON.stringify(varItOpsSaveSOPDTlsJsonObj);
	//alert('strJSON is:'+strJSON+':');	
	if (confirm("Are you sure you want to save SOP details") == true) {
	fnCommonDoAjaxForSave("<%=request.getContextPath()%>/pages/itOpsSaveSOPDtls", strJSON,  "fnItOpsFnAfterSaveSOPDtls", "fnItOpsFnErrAfterSaveSOPDtls"); 
	}
	else{
		$('#itOpsSOPDtlsAddEditPopUp').modal('hide');
	}
}
/**This method is called on success of fnCommonDoAjaxForSave util method with action save sop details
 * This method hides popup and load sop data tables
*/
function fnItOpsFnAfterSaveSOPDtls(){
	//alert("success");
	$('#itOpsSOPDtlsAddEditPopUp').modal('hide');
	fnGetSopDtls();
}
/**This method is called on failure of fnCommonDoAjaxForSave util method with action save sop details
*/
function fnItOpsFnErrAfterSaveSOPDtls(){
	alert("failure");
}
/**This method is called to intiate an ajax call to get list of paramcodes
 * @param SOP Id
 */
function fnItOpsGetSOPParamCodeList()
{
	var varSOPIdParam=getValuesFromInputField("sopIdParam");
	//alert("sopIdParam"+getValuesFromInputField("sopIdParam"));
	var varGetParamCodeListJsonObj = {};
	varGetParamCodeListJsonObj['sopId'] = varSOPIdParam;
	//alert("param sop Id to controller"+varGetParamCodeListJsonObj['sopId']);
    var strJSON = JSON.stringify(varGetParamCodeListJsonObj);
	fnCommonDoAjaxForGet("<%=request.getContextPath()%>/pages/itOpsGetParamCodeList", strJSON,  "fnSucAfterGetSOPParamCodeList", "fnErrAfterGetSOPParamCodeList");
}
function fnSucAfterGetSOPParamCodeList(data){
	//alert("success");
	
	$('#paramCodeSelect option').remove();
	document.getElementById("paramValue").value = "";
	var varSOPParamCodeListOptions ='';
	for(var i=0; i<data.length;i++){
		varSOPParamCodeListOptions += '<option value="' +data[i].paramName + '">'+ data[i].paramName + '</option>';
		//alert("++++++++++++++++++++++++++++++++"+varSOPParamCodeListOptions);
		 }
	 $('#paramCodeSelect').append(varSOPParamCodeListOptions);
	 document.getElementById('paramValue').style.border = '';
	 $('#itOpsSOPParamDtlsAddPopUp').modal('show');
}
function fnErrAfterGetSOPParamCodeList(){
	alert("failure");
}
function fnItOpsValAddSOPParamDtls(){
	 var varItOpswrkflwParamvalErrMsg = '';
	 var varParamCode = document.getElementById('paramValue').value;
	
	 
   	if(varParamCode == null || varParamCode == "") {
   		varItOpswrkflwParamvalErrMsg = "Param value";
   		setInvalidInputFieldBorderRed('paramValue');
   	}
	if(varItOpswrkflwParamvalErrMsg.length > 0)
	{
		varItOpswrkflwParamvalErrMsg += " are mandatory fields. ";
	}
	if(varItOpswrkflwParamvalErrMsg == null || varItOpswrkflwParamvalErrMsg == ''){
		fnItOpsAddSOPParamDtls();
	}else{
		//alert(varItOpswrkflwParamvalErrMsg+" Fields are Required:");
		fnShowItOpsValidationDialog(varItOpswrkflwParamvalErrMsg);
	}	
}

function fnItOpsAddSOPParamDtls(){
	
	
	var varItOpsAddSOPPrmJsonObj = {};
	//alert("hi"+getValuesFromInputField("sopIdParam"));
	varItOpsAddSOPPrmJsonObj['sopId'] = getValuesFromInputField("sopIdParam");
	//alert("sopId"+	varItOpsAddSOPPrmJsonObj['sopId'] );
	

	varItOpsAddSOPPrmJsonObj['paramCode'] =document.getElementById("paramCodeSelect").value;
	//alert("paramCode"+	varItOpsAddSOPPrmJsonObj['paramCode'] );
	 
	varItOpsAddSOPPrmJsonObj['paramValue'] = getValuesFromInputField("paramValue");
	//alert("paramValue"+	varItOpsAddSOPPrmJsonObj['paramValue'] );
	
	var strJSON = JSON.stringify(varItOpsAddSOPPrmJsonObj);
	//alert('strJSON is:'+strJSON+':');		
	if (confirm("Are you sure you want to add param for SOP") == true) {
	fnCommonDoAjaxForSave("<%=request.getContextPath()%>/pages/itOpsAddSOPParamDtls", strJSON,  "fnItOpsFnAfterAddSOPParamDtls", "fnItOpsFnErrAfterAddSOPParamDtls"); 
	}
	else{
		$('#itOpsSOPParamDtlsAddPopUp').modal('hide');
	}
}
function fnItOpsFnAfterAddSOPParamDtls(){
	//alert("success");
	$('#itOpsSOPParamDtlsAddPopUp').modal('hide');
	fnGetSopDtls();
}
function fnItOpsFnErrAfterAddSOPParamDtls(){
	alert("failure");
}

function fnPopulateSOPParamDtlsInPopup(varSOPId,varSOPParamId){
	//alert("sopId"+varSOPId+"paramId"+varSOPParamId);
	$("#sopIdParamEdit").val(varSOPId);
	//alert("SOPIdparam:  " +getValuesFromInputField("sopIdParamEdit"));
	var allSOPParamData = $('#sopParamDtlsDataTable').DataTable().rows().data();
	for(var i=0;i<allSOPParamData.length;i++)
	{
	var tempSOPParamData = allSOPParamData [i];
	//alert("inside fnPopulateSOPDtlsInPopup fn., tempSOPData is:"+tempSOPData +':tempSOPData [sopId]:'+tempSOPData ['sopId']+':');
	var tempSOPParamId = tempSOPParamData ['sopParamId'];
	if(tempSOPParamId == varSOPParamId)
		{
			$("#sopParamId").val(tempSOPParamId);
			$("#paramCodeEdit").val(tempSOPParamData ['paramCode']);
			document.getElementById('paramCodeEdit').style.border = '';
			$("#paramValueEdit").val(tempSOPParamData ['paramValue']);
			document.getElementById('paramValueEdit').style.border = '';
			if(tempSOPParamData ['deleteFlag']==1){
				document.getElementById("checkboxParam").checked = true;
			}
			else{
			document.getElementById("checkboxParam").checked = false;
			}
			$('#itOpsSOPParamDtlsEditPopUp').modal('show');
			break;
		}
	
	} 
}
function fnItOpsSOPParamEditPopUpVal(){
	var varItOpsSOPParamValErrMsg = '';
	 var varParamCodeEdit = document.getElementById('paramCodeEdit').value;
	 var varParamValueEdit = document.getElementById('paramValueEdit').value;
	 
   if(varParamCodeEdit == null || varParamCodeEdit == "") {
	   varItOpsSOPParamValErrMsg = "Param code";
   	setInvalidInputFieldBorderRed('paramCodeEdit');
   }
	if(varParamValueEdit == null || varParamValueEdit == ""){
			if(varItOpsSOPParamValErrMsg.length > 0)
			{
				varItOpsSOPParamValErrMsg += ", ";
			}
			varItOpsSOPParamValErrMsg += "Param value";
			setInvalidInputFieldBorderRed('paramValueEdit');
	}
	if(varItOpsSOPParamValErrMsg.length > 0)
	{
		varItOpsSOPParamValErrMsg += " are mandatory fields. ";
	}
	if(varItOpsSOPParamValErrMsg == null || varItOpsSOPParamValErrMsg == ''){
		fnItOpsValSOPParamDtls();
	}else{
		//alert(varItOpsSOPParamValErrMsg+" Fields are Required:");
		fnShowItOpsValidationDialog(varItOpsSOPParamValErrMsg);
	}	
	
}

function fnItOpsValSOPParamDtls(){
	//alert("param validate method");
	var varValSOPParamDtlsJsonObj = {};
	varValSOPParamDtlsJsonObj['sopId'] = getValuesFromInputField("sopIdParamEdit");
	varValSOPParamDtlsJsonObj['sopParamId'] = getValuesFromInputField("sopParamId");
	varValSOPParamDtlsJsonObj['paramCode'] = getValuesFromInputField("paramCodeEdit");
	//alert("id and name to controller"+varValSOPParamDtlsJsonObj['sopId']+varValSOPParamDtlsJsonObj['paramCode']);
	var strJSON = JSON.stringify(varValSOPParamDtlsJsonObj);
	fnCommonDoAjaxForGet("<%=request.getContextPath()%>/pages/itOpsValSOPParamDtls", strJSON,  "fnSucAfterValSOPParamDtls", "fnErrAfterValSOPParamDtls");
}
function fnSucAfterValSOPParamDtls(data){
	//alert("success count"+data);
	if(data==0){
		//alert("data is 0");
		fnItOpsUpdateSOPParamDtls();
	}
	else{
		alert("Already param code exists");
	}
}
function fnErrAfterValSOPParamDtls(){
	alert("failure");
}
function fnItOpsUpdateSOPParamDtls(){
	
	//alert("inside fnItOpsUpdateSOPParamDTls");
	//validate();
	var varItOpsUpdateParamJsonObj = {};
	
	varItOpsUpdateParamJsonObj['sopParamId'] = getValuesFromInputField("sopParamId");
	//alert("sopParamId"+	varItOpsUpdateParamJsonObj['sopParamId']);
	
    var paramCheckBoxValue=document.getElementById("checkboxParam").checked;
    //alert("paramcheckboxvalue"+paramCheckBoxValue);
	if(paramCheckBoxValue==true){
		varItOpsUpdateParamJsonObj['deleteFlag'] = 1;
	}
	else{
		varItOpsUpdateParamJsonObj['deleteFlag'] = 0;
	}
	//alert("deleteFlag"+	varItOpsUpdateParamJsonObj['deleteFlag'] );
	
	varItOpsUpdateParamJsonObj['paramCode'] = getValuesFromInputField("paramCodeEdit");
	//alert("paramCode"+	varItOpsUpdateParamJsonObj['paramCode'] );
	varItOpsUpdateParamJsonObj['paramValue'] = getValuesFromInputField("paramValueEdit");
	//alert("paramValue"+	varItOpsUpdateParamJsonObj['paramValue'] );
	var strJSON = JSON.stringify(varItOpsUpdateParamJsonObj);
	//alert('strJSON is:'+strJSON+':');	
	if (confirm("Are you sure you want to edit param for SOP") == true) {
	fnCommonDoAjaxForSave("<%=request.getContextPath()%>/pages/itOpsUpdateSOPParamDtls", strJSON,  "fnItOpsFnAfterUpdateSOPParamDtls", "fnItOpsFnErrUpdateSOPParamDtls"); 
	}
	else{
		$('#itOpsSOPParamDtlsEditPopUp').modal('hide');
	}
}
function fnItOpsFnAfterUpdateSOPParamDtls(){
	//alert("success");
	$('#itOpsSOPParamDtlsEditPopUp').modal('hide');
	fnGetSopDtls();
}

function fnItOpsFnErrUpdateSOPParamDtls(){
	alert("failure");
}
</script>
</head>
<body>
			<!-- MAIN CONTENT -->
			<div id="content">

				<!-- widget grid -->
				<section id="widget-grid" class="">
					
					<div class="row">
					
						<!--START ROW -->
							<div class="row">
								<!--BUTTONS START -->
								<div class="pull-right" style="padding-right: 2%;">
									<a data-toggle="modal" onclick="fnItOpsSOPDtlsAddSOP()" class="btn btn-success txt-color-white pull-right  ">
										<i class="fa fa-circle-arrow-up fa-lg"></i>Add SOP
									</a>   
								<br>
								<br>
							   </div>
							<!--BUTTONS END -->
						  </div>
						  <!--END ROW -->
						<!-- NEW WIDGET START -->
						<article class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
				
							<!-- Widget ID (each widget will need unique ID)-->
							<div class="jarviswidget jarviswidget-color-darken" id="wid-id-0" data-widget-editbutton="false">
								<!-- widget options:
								usage: <div class="jarviswidget" id="wid-id-0" data-widget-editbutton="false">
				
								data-widget-colorbutton="false"
								data-widget-editbutton="false"
								data-widget-togglebutton="false"
								data-widget-deletebutton="false"
								data-widget-fullscreenbutton="false"
								data-widget-custombutton="false"
								data-widget-collapsed="true"
								data-widget-sortable="false"
				
								-->
								<header>
								
									<h2>Sop Details List </h2>
				
								</header>
				
								<!-- widget div-->
								<div>
				
									<!-- widget edit box -->
									<div class="jarviswidget-editbox">
										<!-- This area used as dropdown edit box -->
				
									</div>
									<!-- end widget edit box -->
				
									<!-- widget content -->
									<div class="widget-body no-padding">
				
										<table id="sopDtlsDataTable" class="table table-striped table-bordered table-hover" width="100%" >
											<thead>
												<tr>
													<th>SOP ID</th>	
													<th>SOP Name</th>	
													<th>SOP Desc</th>
												     <th>Created User</th>
													 <th>Created Date</th>	
													<th>Modified User </th>	
													<th>Modified Date</th> 
													<th>Deleted ?</th>
													<th>Action</th>
												</tr>
											</thead>
											<tbody>
								
											</tbody>
									</table>

									</div>
									<!-- end widget content -->
				
								</div>
								<!-- end widget div -->
				
							</div>
							<!-- end widget -->
							</article>
							<!-- 
							
					
						<!--START ROW -->
							<div class="row">
								<!--BUTTONS START -->
								<div class="pull-right" style="padding-right: 2%;">
									<a data-toggle="modal" onclick="fnItOpsGetSOPParamCodeList()" class="btn btn-success txt-color-white pull-right  ">
										<i class="fa fa-circle-arrow-up fa-lg"></i>Add SOP Param
									</a>   
								<br>
								<br>
							   </div>
							<!--BUTTONS END -->
						  </div>
						  <!--END ROW -->
							
							
							<!-- NEW WIDGET START -->
						 <article class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
				
							<!-- Widget ID (each widget will need unique ID)-->
							<div class="jarviswidget jarviswidget-color-darken"  data-widget-editbutton="false">
								<!-- widget options:
								usage: <div class="jarviswidget" id="wid-id-0" data-widget-editbutton="false">
				
								data-widget-colorbutton="false"
								data-widget-editbutton="false"
								data-widget-togglebutton="false"
								data-widget-deletebutton="false"
								data-widget-fullscreenbutton="false"
								data-widget-custombutton="false"
								data-widget-collapsed="true"
								data-widget-sortable="false"
				
								-->
								<header>
								
									<h2>Sop Param Details List </h2>
				
								</header>
				
								<!-- widget div-->
								<div>
				
									<!-- widget edit box -->
									<div class="jarviswidget-editbox">
										<!-- This area used as dropdown edit box -->
				
									</div>
									<!-- end widget edit box -->
				
									<!-- widget content -->
									<div class="widget-body no-padding">
				
										<table id="sopParamDtlsDataTable" class="table table-striped table-bordered table-hover" width="100%">
											<thead>
												<tr>
														<th>Param Id</th>
														<th>Param Code</th>
														<th>Param Value</th>
														<th>Created User</th>
														<th>Created Date</th>
														<th>Modified User</th>
														<th>Modified Date</th>
														<th>Deleted ?</th>
														<th>Action</th>
												</tr>
											</thead>
											<tbody>
								
											</tbody>
									</table>

									</div>
									<!-- end widget content -->
				
								</div>
								<!-- end widget div -->
				
							</div>
							<!-- end widget -->
							</article>
							
							<!-- Modal popup for SOP -->
		<div class="modal fade" id="itOpsSOPDtlsAddEditPopUp" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
			<div class="modal-dialog">
				<div class="modal-content">
					<div class="modal-header">
						<button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
						<h4 class="modal-title">
							<b> SOP Details</b>
						</h4>
					</div>
					<input type="hidden" name="sopId" id="sopId" class="form-control"/>
					<div class="modal-body">
							<div class="row">
							<div class="col-md-6">
								<div class="form-group">
									<label for="category"></label> SOP Name <input type="text"
										name="sopName" id="sopName"  class="form-control" disabled/>
								</div>
							</div>
							</div>
							<div class="row">
							<div class="col-md-6">
								<div class="form-group">
									<label for="category"></label> SOP Description <input type="text"
										name="sopDesc" id="sopDesc" class="form-control"  required />
								</div>
							</div>
							</div>
							<div class="row">
							<div class="col-md-6" id="deletecheckbox"  style="display:none" >
								<div class="inline-group">
									<label class="checkbox">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
									<input type="checkbox" id="checkbox" name="checkbox-inline">
									<i></i>Delete ?</label>
									</div>
								</div>
                            </div>
              
							<div class="modal-footer">
							<footer>
							
								<button type="button" id="save"class="btn btn-primary" onclick="javascript:fnItOpsValSOPDtls();">Save</button>
								<button type="button" class="btn btn-default" data-dismiss="modal" >Cancel</button>
							</footer>
							</div>
							<!-- </form>	 -->
					</div>
					<!-- -/.modal-body -->
				</div>
				<!-- /.modal-content -->
			</div>
			<!-- /.modal-dialog -->
		</div>
		<!-- /.modal -->
	<!-- modal popup end SOP -->
							
							<!-- Modal popup for SOP Param Add-->
		<div class="modal fade" id="itOpsSOPParamDtlsAddPopUp" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
			<div class="modal-dialog">
				<div class="modal-content">
					<div class="modal-header">
						<button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
						<h4 class="modal-title">
							<b>Add SOP Param Details</b>
						</h4>
					</div>
					<input type="hidden" name="sopIdParam" id="sopIdParam" class="form-control"/>
					<div class="modal-body">
							<div class="row">
							<div class="col-md-6">
								<div class="form-group">
									
								<label for="category"></label>Param Code<br>
				    		 		<select  style="width: 270px;" id="paramCodeSelect" name="paramCodeSelect">
           					    </select>
								</div>
							</div>
							</div>
							<div class="row">
							<div class="col-md-6">
								<div class="form-group">
									<label for="category"></label> Param Value <input type="text"
										name="paramValue" id="paramValue" class="form-control"  required />
								</div>
							</div>
							</div>          
							<div class="modal-footer">
							<footer>
							
								<button type="button" id="save"class="btn btn-primary" onclick="javascript:fnItOpsValAddSOPParamDtls();">Save</button>
								<button type="button" class="btn btn-default" data-dismiss="modal" >Cancel</button>
							</footer>
							</div>
							<!-- </form>	 -->
					</div>
					<!-- -/.modal-body -->
				</div>
				<!-- /.modal-content -->
			</div>
			<!-- /.modal-dialog -->
		</div>
		<!-- /.modal -->
	<!-- modal popup end SOP Param Add-->
							
				<!-- Modal popup for SOP param edit -->
		<div class="modal fade" id="itOpsSOPParamDtlsEditPopUp" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
			<div class="modal-dialog">
				<div class="modal-content">
					<div class="modal-header">
						<button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
						<h4 class="modal-title">
							<b> Edit SOP Details</b>
						</h4>
					</div>
					<input type="hidden" name="sopIdParamEdit" id="sopIdParamEdit" class="form-control"/>
					<input type="hidden" name="sopParamId" id="sopParamId" class="form-control"/>
					<div class="modal-body">
							<div class="row">
							<div class="col-md-6">
								<div class="form-group">
									<label for="category"></label> Param Code <input type="text"
										name="paramCodeEdit" id="paramCodeEdit"  class="form-control"/>
								</div>
							</div>
							</div>
							<div class="row">
							<div class="col-md-6">
								<div class="form-group">
									<label for="category"></label> Param Value <input type="text"
										name="paramValueEdit" id="paramValueEdit" class="form-control"  required />
								</div>
							</div>
							</div>
							<div class="row">
							<div class="col-md-6" id="deleteCheckBoxParam">
								<div class="inline-group">
									<label class="checkbox">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
									<input type="checkbox" id="checkboxParam" name="checkboxParam">
									<i></i>Delete ?</label>
									</div>
								</div>
                            </div>
              
							<div class="modal-footer">
							<footer>
							
								<button type="button" id="save"class="btn btn-primary" onclick="javascript: fnItOpsSOPParamEditPopUpVal();">Save</button>
								<button type="button" class="btn btn-default" data-dismiss="modal" >Cancel</button>
							</footer>
							</div>
							<!-- </form>	 -->
					</div>
					<!-- -/.modal-body -->
				</div>
				<!-- /.modal-content -->
			</div>
			<!-- /.modal-dialog -->
		</div>
		<!-- /.modal -->
	<!-- modal popup end SOP -->		
						</div>	</section></div>
				
</body>
</html>