<%/***********************************************************
  *Copyright (C) 2015 Syntel and/or its affiliates
  *All rights reserved.
************************************************************/%>
<%
/********************************************************************
 Author 				: Syntel
 Version 				: 1.0
 Purpose				: This is for Open Incident List of SyntBotsITOps Application
 ********************************************************************/
%>
<%@ page language="java" contentType="text/html; charset=ISO-8859-1"
    pageEncoding="ISO-8859-1"%>
<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1">
<title> Incident List</title>
<script>
/**
 *This is method is called during jsp is loaded
 */
$(document).ready(function() {
	fnIntlizIncdntDtlsDataTable();
	fnGetIncidentDetailsList();
	fnGetOpenIncidentCount();
	fnGetSevereIncidentCount();
})
/**
 *This function is used to get data table properties of open incidents list data table
 */
var varIncdntDtlsDataTable;
function fnIntlizIncdntDtlsDataTable(){
	
	//alert("Inside Dtable")
	varIncdntDtlsDataTable = $('#incdntDtlsDataTable').dataTable({
															"processing" : true,
															"scrollY" : "195px",
															"autoWidth" : true,
															"iDisplayLength" : 5,
															"sDom" : "<'dt-toolbar'<'col-xs-6 col-sm-6'f>r>"
																+ "t"
																+ "<'dt-toolbar-footer'<'col-sm-6 col-xs-6 hidden-xs'i><'col-sm-6 col-xs-12'p>>",
											"oTableTools" : {
															"aButtons" : [
																	"copy",
																	"csv",
																	"xls",
																	{
																		"sExtends" : "pdf",
																		"sTitle" : "SyntBots_PDF",
																		"sPdfMessage" : "SyntBots PDF Export",
																		"sPdfSize" : "letter"
																	},
																	{
																		"sExtends" : "print",
																		"sMessage" : "Generated by SyntBots <i>(press Esc to close)</i>"
																	} ],
															"sSwfPath" : "<%=request.getContextPath()%>/smartadmin/js/plugin/datatables/swf/copy_csv_xls_pdf.swf"
														}, 
														   //"sAjaxSource": 'incidentListForLoggedInUser',
														   "aoColumns" : [ {
																"data" : "incdntDtlsId"
															}, {
																"data" : "incdntId"
															},
															{
																"data" : "incdntAppName"
															}, 
															
															{
																"data" : "incdntAssgndTo"
															}, {
																"data" : "incidentOriginalSeverity" ,
																"mRender": function (data, type, row) {
																	var dataToCompare = "";
																	if( (typeof(data) !="undefined")  && (data != 'undefined') && (data != null) ){
																		var dataToCompare=data.toLowerCase();
																	} else
																		{
																			data = '';
																		}
																	 if (dataToCompare == 'sev1') {
																		 return ' <span class="badge bg-color-red">'+data+ '</span>';
															          } else if(dataToCompare == 'sev2') {
															        	   return ' <span class="badge bg-color-orange">'+data+ '</span>';
															          }else if(dataToCompare == 'sev3') {
															        	   return ' <span class="badge bg-color-orange">'+data+ '</span>';
															          }else if(dataToCompare == 'sev4') {
															        	   return ' <span class="badge bg-color-orange">'+data+ '</span>';
															          }else if(dataToCompare == 'sev5') {
															        	   return ' <span class="badge bg-color-orange">'+data+ '</span>';
															          }
																	  else{
																	   return data;
																	  }
																	  
														      }	
															}, {
																"data" : "incdntAssgnmntGrp"
															}, {
																"data" : "incdntState"
															},{
																"data" : "strIncidentOpenedDate"
															},{
																"data" : "incidentExecStatus",
																"mRender": function (data, type, row) {
																	var dataToCompare = "";
																	if( (typeof(data) !="undefined")  && (data != 'undefined') && (data != null) ){
																		dataToCompare = data.toLowerCase();
																	} else
																		{
																			data = '';
																		}
																	 if (dataToCompare == 'invoked') {
																		
																		 return '<img src="<%=request.getContextPath()%>/images/discoverImage.GIF" width="20" height="20" aling ="center"/>'+' ' +data;
																	 } 
																	  else if(dataToCompare == 'escalated to l2'){
															        	  
															        	  return '<span class="txt-color-red pull-left"><i class="fa fa-lg fa-exclamation-triangle "></i></span>'+' ' +data;
															          }
																	  else if(dataToCompare == 'service restored'){
															        	  
															        	  return '<span class="txt-color-blue pull-left"><i class="fa fa-lg fa-check"></i></span>'+' ' +data;
															          }
																	  else if(dataToCompare == 'filesystem normal'){
															        	  
															        	  return '<span class="txt-color-blue pull-left"><i class="fa fa-lg fa-check"></i></span>'+' ' +data;
															          }
																	  else if(dataToCompare == 'failed'){
															        	  
															        	 return '<img src="<%=request.getContextPath()%>/images/failed.png" width="20" height="20" aling ="center"/>'+' ' +data;
															          }
																	 else{
																		  return data;
																	  }
														      }	
															},{
																"data" : "strExecStartDate"
															}, {
																"data" : "incdntAction"
															}],
															"columnDefs": [
															               {
															                   "targets": [ 0 ],
															                   "visible": false,
															                   "searchable": false
															               }]
														
														
														});

}
/**
 *This method is used to intiate an ajax call to get incident details for logged in user
 * @return success function/ error function
*/
function fnGetIncidentDetailsList()
{
	// alert("inside:fnGetIncidentDetailsList");
	  var getIncidentDetailsListJsonObj = {};
	  var strJSON = JSON.stringify(getIncidentDetailsListJsonObj);
	  fnCommonDoAjaxForGet("<%=request.getContextPath()%>/pages/incidentListForLoggedInUser", strJSON,  "fnSucAfterGetIncidentDetailsList", "fnErrAfterGetIncidentDetailsList");
	
}
/**This method is called on success of fnSucAfterGetIncidentDetailsList util method with action get incident details for logged in user
* @param incident details
*/
function fnSucAfterGetIncidentDetailsList(incidentdtls)
{
	fnLoadDataTable(varIncdntDtlsDataTable, incidentdtls);
	varIncdntDtlsDataTable.find('tbody tr:first').addClass('row_selected');
}
/**This method is called on failure of fnCommonDoAjaxForGet util method with action get incident details for logged in user
*/
function fnErrAfterGetIncidentDetailsList()
{
	alert("Incident Details error");
} 
/**
 *This method is used to load incident details for particular incident details Id
 * @param incident Id
 * @return SOP execution jsp page
*/
function fnViewSecondTabByIncidentDtlsId(incdntDtlsId,applicatioName,queueName){
	//alert("fnViewSecondTabByIncidentDtlsId");
	fnLoadITOpsMainDownPortionDiv('incidentDetails.jsp', 'itopsIncidentListId', 'Incidents List','incdntDtlsId='+incdntDtlsId,'Incident > Open Incidents > Incident Details','itopsPrimeMenuIncidentsUlId','','');

	 
}
/**
 *This method is used to load corresponding SOP details for particular incident Id
 * @param incident Id
 * @return SOP execution jsp page
*/
function fnSOPExceutionByIncidentId(incidentId){
	
	fnLoadITOpsMainDownPortionDiv('sopExecution.jsp', 'itopsSOPExecutionListId', 'SOPExecution','fetchSopDtlsForIncidentId=true&incidentId='+incidentId,'SOPExceution','itopsPrimeMenuSOPExecutionUlId','','');
}
/**This method is called on clicking of row in incidents list data table
*/
$("#incdntDtlsDataTable tbody").on('click', 'tr', function() {
	
	$("#incdntDtlsDataTable tbody tr").removeClass('row_selected');	
    $(this).addClass('row_selected');
	
});

/**
 *This method is used to intiate an ajax call to get open incidents list for logged in user
 * @return success function/ error function
*/
function fnGetOpenIncidentCount()
{
	//alert(incdntDtlsId);
	
	  var getOpenIncidentJsonObj = {};
	  var strJSON = JSON.stringify(getOpenIncidentJsonObj);
	  fnCommonDoAjaxForGet("<%=request.getContextPath()%>/pages/openIncidentsForLoggedInUser", strJSON,  "fnAfterGetOpenIncidentCount", "fnErrAfterGetOpenIncidentCount");
	
}
/**This method is called on success of fnCommonDoAjaxForGet util method with action get open incidents for logged in user
* @param open incidents
*/
function fnAfterGetOpenIncidentCount(openIncidents)
{
	document.getElementById('openIncidents').innerHTML =openIncidents;
}
/**This method is called on failure of fnCommonDoAjaxForGet util method with action get open incidents for logged in user
*/
function fnErrAfterGetOpenIncidentCount()
{
	alert("openIncidenterror");
}
/**
 *This method is used to intiate an ajax call to get severe incidents details for logged in user
 * @return success function/ error function
*/
function fnGetSevereIncidentCount()
{
	//alert(incdntDtlsId);
	
	  var getSevereIncidentJsonObj = {};
	  var strJSON = JSON.stringify(getSevereIncidentJsonObj);
	  fnCommonDoAjaxForGet("<%=request.getContextPath()%>/pages/severeIncidentsForLoggedInUser", strJSON,  "fnAfterGetSevereIncidentCount", "fnErrAfterGetSevereIncidentCount");
	
}
/**This method is called on success of fnCommonDoAjaxForGet util method with action get severe incidents details for logged in user
* @param severe incidents
*/
function fnAfterGetSevereIncidentCount(severeIncidents)
{
	document.getElementById('severeIncidents').innerHTML =severeIncidents;
}
/**This method is called on failure of fnCommonDoAjaxForGet util method with action get severe incidents details for logged in user
*/
function fnErrAfterGetSevereIncidentCount()
{
	alert("severeIncidenterror");
}

</script>
</head>
<body>
			<!-- MAIN CONTENT -->
			<div id="content">

				<div class="row">
					<div class="col-xs-12 col-sm-7 col-md-7 col-lg-4">
					
					</div>
					<div class="col-xs-12 col-sm-5 col-md-5 col-lg-8">
						<ul id="sparks" class="">
							<li class="sparks-info">
								<h5>Open Incidents <center> <span id="openIncidents" class="txt-color-blue"></span></center></h5>
							</li>
							<li class="sparks-info">
								<h5 style="margin-left: -1%;">Severity Incidents <center><span id="severeIncidents" class="txt-color-purple"></span></center></h5>
							</li>
						</ul>
					</div>
				</div>
				
				<!-- widget grid -->
				<section id="widget-grid" class="">
				
					<!-- row -->
					<div class="row">
				
						<!-- NEW WIDGET START -->
						<article class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
				
							<!-- Widget ID (each widget will need unique ID)-->
							<div class="jarviswidget jarviswidget-color-darken" id="wid-id-0" data-widget-editbutton="false">
								
								<header>
								
									<h2>Open Incident List </h2>
				
								</header>
				
								<!-- widget div-->
								<div>
				
									<!-- widget edit box -->
									<div class="jarviswidget-editbox">
										<!-- This area used as dropdown edit box -->
				
									</div>
									<!-- end widget edit box -->
				
									<!-- widget content -->
									<div class="widget-body no-padding">
				
										<table id="incdntDtlsDataTable" class="table table-striped table-bordered table-hover" width="100%">
											<thead>
												<tr>
													<th>ID</th>	
													<th>Incident ID</th>	
													<th>Application</th>
													<th>Assigned To</th>	
													<th>Severity</th>
													<th>Assignment Group</th>	
													<th>Incident State</th>
													<th>Opened Date</th>
													<th>Execution Status</th>
													<th>SOP Executed Time</th>		
													<th>Actions</th> 
													
											   </tr>
											</thead>
											<tbody>
								
											</tbody>
									</table>

									</div>
									<!-- end widget content -->
				
								</div>
								<!-- end widget div -->
				
							</div>
							<!-- end widget -->
							</article></div></section></div>
				
</body>
</html>